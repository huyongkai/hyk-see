# CI 工作流 - 详细版本，用于学习目的

name: CI

on:
  # 当推送到主分支时触发
  push:
    branches: [main]
  # 当创建针对主分支的 PR 时触发
  pull_request:
    branches: [main]

jobs:
  build:
    name: 构建和测试
    runs-on: ubuntu-latest
    steps:
      # 步骤 1: 检出代码库
      - name: 检出代码
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # 获取完整的历史记录，对于一些工具（如 Changesets）可能需要

      # 步骤 2: 设置 Node.js 环境
      - name: 设置 Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          # 不使用 npm 缓存，因为我们使用 pnpm

      # 步骤 3: 设置 pnpm
      - name: 设置 pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8 # 使用 pnpm 版本 8
          run_install: false # 我们将在后面手动运行安装

      # 步骤 4: 获取 pnpm 缓存目录
      - name: 获取 pnpm 缓存目录
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      # 步骤 5: 设置缓存
      - name: 设置 pnpm 缓存
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      # 步骤 6: 安装依赖
      - name: 安装依赖
        run: pnpm install --frozen-lockfile

      # 步骤 7: 代码风格检查
      - name: 运行代码风格检查
        run: pnpm run lint

      # 步骤 8: 构建项目
      - name: 构建项目
        run: pnpm run build

      # 步骤 9: 运行测试
      - name: 运行测试
        run: pnpm run test

      # 步骤 10: 运行安全检查
      - name: 运行安全检查
        run: pnpm run security

      # 步骤 11: 上传测试覆盖率报告
      - name: 上传测试覆盖率报告
        uses: codecov/codecov-action@v3
        if: success()
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # 如果您的仓库是私有的，需要设置此令牌
          fail_ci_if_error: true # 如果上传失败，则使 CI 失败
          verbose: true # 详细输出

      # 步骤 12: 缓存构建产物（可选）
      - name: 缓存构建产物
        uses: actions/cache@v3
        with:
          path: |
            packages/*/dist
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-
